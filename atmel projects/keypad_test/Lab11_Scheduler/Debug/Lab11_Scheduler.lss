
Lab11_Scheduler.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000003b0  00000444  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800104  00800104  00000448  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000448  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000478  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  000004b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009f3  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008eb  00000000  00000000  00000f0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000525  00000000  00000000  000017f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c4  00000000  00000000  00001d1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000048a  00000000  00000000  00001de0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000fd  00000000  00000000  0000226a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002367  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	8a c0       	rjmp	.+276    	; 0x116 <__ctors_end>
   2:	00 00       	nop
   4:	a5 c0       	rjmp	.+330    	; 0x150 <__bad_interrupt>
   6:	00 00       	nop
   8:	a3 c0       	rjmp	.+326    	; 0x150 <__bad_interrupt>
   a:	00 00       	nop
   c:	a1 c0       	rjmp	.+322    	; 0x150 <__bad_interrupt>
   e:	00 00       	nop
  10:	9f c0       	rjmp	.+318    	; 0x150 <__bad_interrupt>
  12:	00 00       	nop
  14:	9d c0       	rjmp	.+314    	; 0x150 <__bad_interrupt>
  16:	00 00       	nop
  18:	9b c0       	rjmp	.+310    	; 0x150 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	99 c0       	rjmp	.+306    	; 0x150 <__bad_interrupt>
  1e:	00 00       	nop
  20:	97 c0       	rjmp	.+302    	; 0x150 <__bad_interrupt>
  22:	00 00       	nop
  24:	95 c0       	rjmp	.+298    	; 0x150 <__bad_interrupt>
  26:	00 00       	nop
  28:	93 c0       	rjmp	.+294    	; 0x150 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	91 c0       	rjmp	.+290    	; 0x150 <__bad_interrupt>
  2e:	00 00       	nop
  30:	8f c0       	rjmp	.+286    	; 0x150 <__bad_interrupt>
  32:	00 00       	nop
  34:	dc c0       	rjmp	.+440    	; 0x1ee <__vector_13>
  36:	00 00       	nop
  38:	8b c0       	rjmp	.+278    	; 0x150 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	89 c0       	rjmp	.+274    	; 0x150 <__bad_interrupt>
  3e:	00 00       	nop
  40:	87 c0       	rjmp	.+270    	; 0x150 <__bad_interrupt>
  42:	00 00       	nop
  44:	85 c0       	rjmp	.+266    	; 0x150 <__bad_interrupt>
  46:	00 00       	nop
  48:	83 c0       	rjmp	.+262    	; 0x150 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	81 c0       	rjmp	.+258    	; 0x150 <__bad_interrupt>
  4e:	00 00       	nop
  50:	7f c0       	rjmp	.+254    	; 0x150 <__bad_interrupt>
  52:	00 00       	nop
  54:	7d c0       	rjmp	.+250    	; 0x150 <__bad_interrupt>
  56:	00 00       	nop
  58:	7b c0       	rjmp	.+246    	; 0x150 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	79 c0       	rjmp	.+242    	; 0x150 <__bad_interrupt>
  5e:	00 00       	nop
  60:	77 c0       	rjmp	.+238    	; 0x150 <__bad_interrupt>
  62:	00 00       	nop
  64:	75 c0       	rjmp	.+234    	; 0x150 <__bad_interrupt>
  66:	00 00       	nop
  68:	73 c0       	rjmp	.+230    	; 0x150 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	71 c0       	rjmp	.+226    	; 0x150 <__bad_interrupt>
  6e:	00 00       	nop
  70:	6f c0       	rjmp	.+222    	; 0x150 <__bad_interrupt>
  72:	00 00       	nop
  74:	6d c0       	rjmp	.+218    	; 0x150 <__bad_interrupt>
  76:	00 00       	nop
  78:	6b c0       	rjmp	.+214    	; 0x150 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	69 c0       	rjmp	.+210    	; 0x150 <__bad_interrupt>
  7e:	00 00       	nop
  80:	67 c0       	rjmp	.+206    	; 0x150 <__bad_interrupt>
  82:	00 00       	nop
  84:	65 c0       	rjmp	.+202    	; 0x150 <__bad_interrupt>
  86:	00 00       	nop
  88:	63 c0       	rjmp	.+198    	; 0x150 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	a5 01       	movw	r20, r10
  8e:	cb 01       	movw	r24, r22
  90:	cb 01       	movw	r24, r22
  92:	cb 01       	movw	r24, r22
  94:	cb 01       	movw	r24, r22
  96:	cb 01       	movw	r24, r22
  98:	cb 01       	movw	r24, r22
  9a:	cb 01       	movw	r24, r22
  9c:	cb 01       	movw	r24, r22
  9e:	cb 01       	movw	r24, r22
  a0:	cb 01       	movw	r24, r22
  a2:	cb 01       	movw	r24, r22
  a4:	cb 01       	movw	r24, r22
  a6:	cb 01       	movw	r24, r22
  a8:	cb 01       	movw	r24, r22
  aa:	cb 01       	movw	r24, r22
  ac:	cb 01       	movw	r24, r22
  ae:	cb 01       	movw	r24, r22
  b0:	cb 01       	movw	r24, r22
  b2:	cb 01       	movw	r24, r22
  b4:	cb 01       	movw	r24, r22
  b6:	cb 01       	movw	r24, r22
  b8:	cb 01       	movw	r24, r22
  ba:	cb 01       	movw	r24, r22
  bc:	cb 01       	movw	r24, r22
  be:	cb 01       	movw	r24, r22
  c0:	cb 01       	movw	r24, r22
  c2:	cb 01       	movw	r24, r22
  c4:	cb 01       	movw	r24, r22
  c6:	cb 01       	movw	r24, r22
  c8:	cb 01       	movw	r24, r22
  ca:	cb 01       	movw	r24, r22
  cc:	cb 01       	movw	r24, r22
  ce:	cb 01       	movw	r24, r22
  d0:	cb 01       	movw	r24, r22
  d2:	c9 01       	movw	r24, r18
  d4:	cb 01       	movw	r24, r22
  d6:	cb 01       	movw	r24, r22
  d8:	cb 01       	movw	r24, r22
  da:	cb 01       	movw	r24, r22
  dc:	cb 01       	movw	r24, r22
  de:	cb 01       	movw	r24, r22
  e0:	c5 01       	movw	r24, r10
  e2:	cb 01       	movw	r24, r22
  e4:	cb 01       	movw	r24, r22
  e6:	cb 01       	movw	r24, r22
  e8:	cb 01       	movw	r24, r22
  ea:	cb 01       	movw	r24, r22
  ec:	c7 01       	movw	r24, r14
  ee:	a8 01       	movw	r20, r16
  f0:	ab 01       	movw	r20, r22
  f2:	ae 01       	movw	r20, r28
  f4:	b1 01       	movw	r22, r2
  f6:	b3 01       	movw	r22, r6
  f8:	b5 01       	movw	r22, r10
  fa:	b7 01       	movw	r22, r14
  fc:	b9 01       	movw	r22, r18
  fe:	bb 01       	movw	r22, r22
 100:	cb 01       	movw	r24, r22
 102:	cb 01       	movw	r24, r22
 104:	cb 01       	movw	r24, r22
 106:	cb 01       	movw	r24, r22
 108:	cb 01       	movw	r24, r22
 10a:	cb 01       	movw	r24, r22
 10c:	cb 01       	movw	r24, r22
 10e:	bd 01       	movw	r22, r26
 110:	bf 01       	movw	r22, r30
 112:	c1 01       	movw	r24, r2
 114:	c3 01       	movw	r24, r6

00000116 <__ctors_end>:
 116:	11 24       	eor	r1, r1
 118:	1f be       	out	0x3f, r1	; 63
 11a:	cf ef       	ldi	r28, 0xFF	; 255
 11c:	d0 e4       	ldi	r29, 0x40	; 64
 11e:	de bf       	out	0x3e, r29	; 62
 120:	cd bf       	out	0x3d, r28	; 61

00000122 <__do_copy_data>:
 122:	11 e0       	ldi	r17, 0x01	; 1
 124:	a0 e0       	ldi	r26, 0x00	; 0
 126:	b1 e0       	ldi	r27, 0x01	; 1
 128:	e0 eb       	ldi	r30, 0xB0	; 176
 12a:	f3 e0       	ldi	r31, 0x03	; 3
 12c:	00 e0       	ldi	r16, 0x00	; 0
 12e:	0b bf       	out	0x3b, r16	; 59
 130:	02 c0       	rjmp	.+4      	; 0x136 <__do_copy_data+0x14>
 132:	07 90       	elpm	r0, Z+
 134:	0d 92       	st	X+, r0
 136:	a4 30       	cpi	r26, 0x04	; 4
 138:	b1 07       	cpc	r27, r17
 13a:	d9 f7       	brne	.-10     	; 0x132 <__do_copy_data+0x10>

0000013c <__do_clear_bss>:
 13c:	21 e0       	ldi	r18, 0x01	; 1
 13e:	a4 e0       	ldi	r26, 0x04	; 4
 140:	b1 e0       	ldi	r27, 0x01	; 1
 142:	01 c0       	rjmp	.+2      	; 0x146 <.do_clear_bss_start>

00000144 <.do_clear_bss_loop>:
 144:	1d 92       	st	X+, r1

00000146 <.do_clear_bss_start>:
 146:	a9 30       	cpi	r26, 0x09	; 9
 148:	b2 07       	cpc	r27, r18
 14a:	e1 f7       	brne	.-8      	; 0x144 <.do_clear_bss_loop>
 14c:	c1 d0       	rcall	.+386    	; 0x2d0 <main>
 14e:	2e c1       	rjmp	.+604    	; 0x3ac <_exit>

00000150 <__bad_interrupt>:
 150:	57 cf       	rjmp	.-338    	; 0x0 <__vectors>

00000152 <GetKeypadKey>:
void TimerOff() {
	TCCR1B = 0x00;
}

void TimerISR() {
	TimerFlag = 1;
 152:	8f ee       	ldi	r24, 0xEF	; 239
 154:	88 b9       	out	0x08, r24	; 8
 156:	00 00       	nop
 158:	30 9b       	sbis	0x06, 0	; 6
 15a:	29 c0       	rjmp	.+82     	; 0x1ae <GetKeypadKey+0x5c>
 15c:	31 9b       	sbis	0x06, 1	; 6
 15e:	29 c0       	rjmp	.+82     	; 0x1b2 <GetKeypadKey+0x60>
 160:	32 9b       	sbis	0x06, 2	; 6
 162:	29 c0       	rjmp	.+82     	; 0x1b6 <GetKeypadKey+0x64>
 164:	33 9b       	sbis	0x06, 3	; 6
 166:	29 c0       	rjmp	.+82     	; 0x1ba <GetKeypadKey+0x68>
 168:	8f ed       	ldi	r24, 0xDF	; 223
 16a:	88 b9       	out	0x08, r24	; 8
 16c:	00 00       	nop
 16e:	30 9b       	sbis	0x06, 0	; 6
 170:	26 c0       	rjmp	.+76     	; 0x1be <GetKeypadKey+0x6c>
 172:	31 9b       	sbis	0x06, 1	; 6
 174:	26 c0       	rjmp	.+76     	; 0x1c2 <GetKeypadKey+0x70>
 176:	32 9b       	sbis	0x06, 2	; 6
 178:	26 c0       	rjmp	.+76     	; 0x1c6 <GetKeypadKey+0x74>
 17a:	33 9b       	sbis	0x06, 3	; 6
 17c:	26 c0       	rjmp	.+76     	; 0x1ca <GetKeypadKey+0x78>
 17e:	8f eb       	ldi	r24, 0xBF	; 191
 180:	88 b9       	out	0x08, r24	; 8
 182:	00 00       	nop
 184:	30 9b       	sbis	0x06, 0	; 6
 186:	23 c0       	rjmp	.+70     	; 0x1ce <GetKeypadKey+0x7c>
 188:	31 9b       	sbis	0x06, 1	; 6
 18a:	23 c0       	rjmp	.+70     	; 0x1d2 <GetKeypadKey+0x80>
 18c:	32 9b       	sbis	0x06, 2	; 6
 18e:	23 c0       	rjmp	.+70     	; 0x1d6 <GetKeypadKey+0x84>
 190:	33 9b       	sbis	0x06, 3	; 6
 192:	23 c0       	rjmp	.+70     	; 0x1da <GetKeypadKey+0x88>
 194:	8f e7       	ldi	r24, 0x7F	; 127
 196:	88 b9       	out	0x08, r24	; 8
 198:	00 00       	nop
 19a:	30 9b       	sbis	0x06, 0	; 6
 19c:	20 c0       	rjmp	.+64     	; 0x1de <GetKeypadKey+0x8c>
 19e:	31 9b       	sbis	0x06, 1	; 6
 1a0:	20 c0       	rjmp	.+64     	; 0x1e2 <GetKeypadKey+0x90>
 1a2:	32 9b       	sbis	0x06, 2	; 6
 1a4:	20 c0       	rjmp	.+64     	; 0x1e6 <GetKeypadKey+0x94>
 1a6:	33 9b       	sbis	0x06, 3	; 6
 1a8:	20 c0       	rjmp	.+64     	; 0x1ea <GetKeypadKey+0x98>
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	08 95       	ret
 1ae:	81 e3       	ldi	r24, 0x31	; 49
 1b0:	08 95       	ret
 1b2:	84 e3       	ldi	r24, 0x34	; 52
 1b4:	08 95       	ret
 1b6:	87 e3       	ldi	r24, 0x37	; 55
 1b8:	08 95       	ret
 1ba:	8a e2       	ldi	r24, 0x2A	; 42
 1bc:	08 95       	ret
 1be:	82 e3       	ldi	r24, 0x32	; 50
 1c0:	08 95       	ret
 1c2:	85 e3       	ldi	r24, 0x35	; 53
 1c4:	08 95       	ret
 1c6:	88 e3       	ldi	r24, 0x38	; 56
 1c8:	08 95       	ret
 1ca:	80 e3       	ldi	r24, 0x30	; 48
 1cc:	08 95       	ret
 1ce:	83 e3       	ldi	r24, 0x33	; 51
 1d0:	08 95       	ret
 1d2:	86 e3       	ldi	r24, 0x36	; 54
 1d4:	08 95       	ret
 1d6:	89 e3       	ldi	r24, 0x39	; 57
 1d8:	08 95       	ret
 1da:	83 e2       	ldi	r24, 0x23	; 35
 1dc:	08 95       	ret
 1de:	81 e4       	ldi	r24, 0x41	; 65
 1e0:	08 95       	ret
 1e2:	82 e4       	ldi	r24, 0x42	; 66
 1e4:	08 95       	ret
 1e6:	83 e4       	ldi	r24, 0x43	; 67
 1e8:	08 95       	ret
 1ea:	84 e4       	ldi	r24, 0x44	; 68
 1ec:	08 95       	ret

000001ee <__vector_13>:
 1ee:	1f 92       	push	r1
 1f0:	0f 92       	push	r0
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	0f 92       	push	r0
 1f6:	11 24       	eor	r1, r1
 1f8:	8f 93       	push	r24
 1fa:	9f 93       	push	r25
 1fc:	af 93       	push	r26
 1fe:	bf 93       	push	r27
 200:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 204:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 208:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 20c:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 210:	01 97       	sbiw	r24, 0x01	; 1
 212:	a1 09       	sbc	r26, r1
 214:	b1 09       	sbc	r27, r1
 216:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 21a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 21e:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 222:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 226:	89 2b       	or	r24, r25
 228:	8a 2b       	or	r24, r26
 22a:	8b 2b       	or	r24, r27
 22c:	99 f4       	brne	.+38     	; 0x254 <__vector_13+0x66>
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <TimerFlag>
 234:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 238:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 23c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 240:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 244:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 248:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 24c:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 250:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 254:	bf 91       	pop	r27
 256:	af 91       	pop	r26
 258:	9f 91       	pop	r25
 25a:	8f 91       	pop	r24
 25c:	0f 90       	pop	r0
 25e:	0f be       	out	0x3f, r0	; 63
 260:	0f 90       	pop	r0
 262:	1f 90       	pop	r1
 264:	18 95       	reti

00000266 <TimerOn>:
 266:	8b e0       	ldi	r24, 0x0B	; 11
 268:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 26c:	8d e7       	ldi	r24, 0x7D	; 125
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 274:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 278:	82 e0       	ldi	r24, 0x02	; 2
 27a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 27e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 282:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 286:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 28a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 28e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 292:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 296:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 29a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 29e:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 2a2:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 2a6:	8f b7       	in	r24, 0x3f	; 63
 2a8:	80 68       	ori	r24, 0x80	; 128
 2aa:	8f bf       	out	0x3f, r24	; 63
 2ac:	08 95       	ret

000002ae <TimerSet>:
}


void TimerSet(unsigned long M) {
	_avr_timer_M = M;
 2ae:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 2b2:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2b6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 2ba:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
 2be:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__data_end>
 2c2:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <__data_end+0x1>
 2c6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end+0x2>
 2ca:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x3>
 2ce:	08 95       	ret

000002d0 <main>:
		_avr_timer_cntcurr = _avr_timer_M;
	}
}

int main(void) {
	TimerOn();
 2d0:	ca df       	rcall	.-108    	; 0x266 <TimerOn>
	TimerSet(10);
 2d2:	6a e0       	ldi	r22, 0x0A	; 10
 2d4:	70 e0       	ldi	r23, 0x00	; 0
 2d6:	80 e0       	ldi	r24, 0x00	; 0
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	e9 df       	rcall	.-46     	; 0x2ae <TimerSet>

	unsigned char x;
	DDRB = 0xFF; PORTB = 0x00;
 2dc:	8f ef       	ldi	r24, 0xFF	; 255
 2de:	84 b9       	out	0x04, r24	; 4
 2e0:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xF0; PORTC = 0x0F;
 2e2:	80 ef       	ldi	r24, 0xF0	; 240
 2e4:	87 b9       	out	0x07, r24	; 7
 2e6:	8f e0       	ldi	r24, 0x0F	; 15
 2e8:	88 b9       	out	0x08, r24	; 8
			case 'D':  PORTB = 0x0D; break;
			case '*':  PORTB = 0x0E; break;
			case '0':  PORTB = 0x00; break;
			case '#':  PORTB = 0x0F; break;

			default:   PORTB = 0x1B; break;
 2ea:	0f 2e       	mov	r0, r31
 2ec:	fb e1       	ldi	r31, 0x1B	; 27
 2ee:	7f 2e       	mov	r7, r31
 2f0:	f0 2d       	mov	r31, r0
			case 'B':  PORTB = 0x0B; break;
			case 'C':  PORTB = 0x0C; break;
			case 'D':  PORTB = 0x0D; break;
			case '*':  PORTB = 0x0E; break;
			case '0':  PORTB = 0x00; break;
			case '#':  PORTB = 0x0F; break;
 2f2:	0f 2e       	mov	r0, r31
 2f4:	ff e0       	ldi	r31, 0x0F	; 15
 2f6:	8f 2e       	mov	r8, r31
 2f8:	f0 2d       	mov	r31, r0
			case '9':  PORTB = 0x09; break;
			case 'A':  PORTB = 0x0A; break;
			case 'B':  PORTB = 0x0B; break;
			case 'C':  PORTB = 0x0C; break;
			case 'D':  PORTB = 0x0D; break;
			case '*':  PORTB = 0x0E; break;
 2fa:	0f 2e       	mov	r0, r31
 2fc:	fe e0       	ldi	r31, 0x0E	; 14
 2fe:	9f 2e       	mov	r9, r31
 300:	f0 2d       	mov	r31, r0
			case '8':  PORTB = 0x08; break;
			case '9':  PORTB = 0x09; break;
			case 'A':  PORTB = 0x0A; break;
			case 'B':  PORTB = 0x0B; break;
			case 'C':  PORTB = 0x0C; break;
			case 'D':  PORTB = 0x0D; break;
 302:	0f 2e       	mov	r0, r31
 304:	fd e0       	ldi	r31, 0x0D	; 13
 306:	af 2e       	mov	r10, r31
 308:	f0 2d       	mov	r31, r0
			case '7':  PORTB = 0x07; break;
			case '8':  PORTB = 0x08; break;
			case '9':  PORTB = 0x09; break;
			case 'A':  PORTB = 0x0A; break;
			case 'B':  PORTB = 0x0B; break;
			case 'C':  PORTB = 0x0C; break;
 30a:	0f 2e       	mov	r0, r31
 30c:	fc e0       	ldi	r31, 0x0C	; 12
 30e:	bf 2e       	mov	r11, r31
 310:	f0 2d       	mov	r31, r0
			case '6':  PORTB = 0x06; break;
			case '7':  PORTB = 0x07; break;
			case '8':  PORTB = 0x08; break;
			case '9':  PORTB = 0x09; break;
			case 'A':  PORTB = 0x0A; break;
			case 'B':  PORTB = 0x0B; break;
 312:	0f 2e       	mov	r0, r31
 314:	fb e0       	ldi	r31, 0x0B	; 11
 316:	cf 2e       	mov	r12, r31
 318:	f0 2d       	mov	r31, r0
			case '5':  PORTB = 0x05; break;
			case '6':  PORTB = 0x06; break;
			case '7':  PORTB = 0x07; break;
			case '8':  PORTB = 0x08; break;
			case '9':  PORTB = 0x09; break;
			case 'A':  PORTB = 0x0A; break;
 31a:	0f 2e       	mov	r0, r31
 31c:	fa e0       	ldi	r31, 0x0A	; 10
 31e:	df 2e       	mov	r13, r31
 320:	f0 2d       	mov	r31, r0
			case '4':  PORTB = 0x04; break;
			case '5':  PORTB = 0x05; break;
			case '6':  PORTB = 0x06; break;
			case '7':  PORTB = 0x07; break;
			case '8':  PORTB = 0x08; break;
			case '9':  PORTB = 0x09; break;
 322:	0f 2e       	mov	r0, r31
 324:	f9 e0       	ldi	r31, 0x09	; 9
 326:	ef 2e       	mov	r14, r31
 328:	f0 2d       	mov	r31, r0
			case '3':  PORTB = 0x03; break;
			case '4':  PORTB = 0x04; break;
			case '5':  PORTB = 0x05; break;
			case '6':  PORTB = 0x06; break;
			case '7':  PORTB = 0x07; break;
			case '8':  PORTB = 0x08; break;
 32a:	68 94       	set
 32c:	ff 24       	eor	r15, r15
 32e:	f3 f8       	bld	r15, 3
			case '2':  PORTB = 0x02; break;
			case '3':  PORTB = 0x03; break;
			case '4':  PORTB = 0x04; break;
			case '5':  PORTB = 0x05; break;
			case '6':  PORTB = 0x06; break;
			case '7':  PORTB = 0x07; break;
 330:	07 e0       	ldi	r16, 0x07	; 7
			case '1':  PORTB = 0x01; break;
			case '2':  PORTB = 0x02; break;
			case '3':  PORTB = 0x03; break;
			case '4':  PORTB = 0x04; break;
			case '5':  PORTB = 0x05; break;
			case '6':  PORTB = 0x06; break;
 332:	16 e0       	ldi	r17, 0x06	; 6
		switch (x) {
			case '\0': PORTB = 0x1F; break;
			case '1':  PORTB = 0x01; break;
			case '2':  PORTB = 0x02; break;
			case '3':  PORTB = 0x03; break;
			case '4':  PORTB = 0x04; break;
 334:	d5 e0       	ldi	r29, 0x05	; 5
	unsigned char x;
	DDRB = 0xFF; PORTB = 0x00;
	DDRC = 0xF0; PORTC = 0x0F;

	while(1) {
		x = GetKeypadKey();
 336:	c4 e0       	ldi	r28, 0x04	; 4
 338:	0c df       	rcall	.-488    	; 0x152 <GetKeypadKey>

		switch (x) {
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	85 34       	cpi	r24, 0x45	; 69
 33e:	91 05       	cpc	r25, r1
 340:	50 f5       	brcc	.+84     	; 0x396 <main+0xc6>
 342:	fc 01       	movw	r30, r24
 344:	ea 5b       	subi	r30, 0xBA	; 186
 346:	ff 4f       	sbci	r31, 0xFF	; 255
 348:	28 c0       	rjmp	.+80     	; 0x39a <__tablejump2__>
			case '\0': PORTB = 0x1F; break;
 34a:	8f e1       	ldi	r24, 0x1F	; 31
 34c:	85 b9       	out	0x05, r24	; 5
 34e:	f4 cf       	rjmp	.-24     	; 0x338 <main+0x68>
			case '1':  PORTB = 0x01; break;
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	85 b9       	out	0x05, r24	; 5
 354:	f1 cf       	rjmp	.-30     	; 0x338 <main+0x68>
			case '2':  PORTB = 0x02; break;
 356:	82 e0       	ldi	r24, 0x02	; 2
 358:	85 b9       	out	0x05, r24	; 5
 35a:	ee cf       	rjmp	.-36     	; 0x338 <main+0x68>
			case '3':  PORTB = 0x03; break;
 35c:	83 e0       	ldi	r24, 0x03	; 3
 35e:	85 b9       	out	0x05, r24	; 5
 360:	eb cf       	rjmp	.-42     	; 0x338 <main+0x68>
			case '4':  PORTB = 0x04; break;
 362:	c5 b9       	out	0x05, r28	; 5
 364:	e9 cf       	rjmp	.-46     	; 0x338 <main+0x68>
			case '5':  PORTB = 0x05; break;
 366:	d5 b9       	out	0x05, r29	; 5
 368:	e7 cf       	rjmp	.-50     	; 0x338 <main+0x68>
			case '6':  PORTB = 0x06; break;
 36a:	15 b9       	out	0x05, r17	; 5
 36c:	e5 cf       	rjmp	.-54     	; 0x338 <main+0x68>
			case '7':  PORTB = 0x07; break;
 36e:	05 b9       	out	0x05, r16	; 5
 370:	e3 cf       	rjmp	.-58     	; 0x338 <main+0x68>
			case '8':  PORTB = 0x08; break;
 372:	f5 b8       	out	0x05, r15	; 5
 374:	e1 cf       	rjmp	.-62     	; 0x338 <main+0x68>
			case '9':  PORTB = 0x09; break;
 376:	e5 b8       	out	0x05, r14	; 5
 378:	df cf       	rjmp	.-66     	; 0x338 <main+0x68>
			case 'A':  PORTB = 0x0A; break;
 37a:	d5 b8       	out	0x05, r13	; 5
 37c:	dd cf       	rjmp	.-70     	; 0x338 <main+0x68>
			case 'B':  PORTB = 0x0B; break;
 37e:	c5 b8       	out	0x05, r12	; 5
 380:	db cf       	rjmp	.-74     	; 0x338 <main+0x68>
			case 'C':  PORTB = 0x0C; break;
 382:	b5 b8       	out	0x05, r11	; 5
 384:	d9 cf       	rjmp	.-78     	; 0x338 <main+0x68>
			case 'D':  PORTB = 0x0D; break;
 386:	a5 b8       	out	0x05, r10	; 5
 388:	d7 cf       	rjmp	.-82     	; 0x338 <main+0x68>
			case '*':  PORTB = 0x0E; break;
 38a:	95 b8       	out	0x05, r9	; 5
 38c:	d5 cf       	rjmp	.-86     	; 0x338 <main+0x68>
			case '0':  PORTB = 0x00; break;
 38e:	15 b8       	out	0x05, r1	; 5
 390:	d3 cf       	rjmp	.-90     	; 0x338 <main+0x68>
			case '#':  PORTB = 0x0F; break;
 392:	85 b8       	out	0x05, r8	; 5
 394:	d1 cf       	rjmp	.-94     	; 0x338 <main+0x68>

			default:   PORTB = 0x1B; break;
 396:	75 b8       	out	0x05, r7	; 5
 398:	cf cf       	rjmp	.-98     	; 0x338 <main+0x68>

0000039a <__tablejump2__>:
 39a:	ee 0f       	add	r30, r30
 39c:	ff 1f       	adc	r31, r31
 39e:	00 24       	eor	r0, r0
 3a0:	00 1c       	adc	r0, r0
 3a2:	0b be       	out	0x3b, r0	; 59
 3a4:	07 90       	elpm	r0, Z+
 3a6:	f6 91       	elpm	r31, Z
 3a8:	e0 2d       	mov	r30, r0
 3aa:	09 94       	ijmp

000003ac <_exit>:
 3ac:	f8 94       	cli

000003ae <__stop_program>:
 3ae:	ff cf       	rjmp	.-2      	; 0x3ae <__stop_program>
